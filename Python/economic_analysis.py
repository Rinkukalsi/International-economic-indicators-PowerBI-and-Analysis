# -*- coding: utf-8 -*-
"""economic_analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_mViWberAjcINH8xKnZh52gImhpcKFqr
"""

import pandas as pd
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

def export_analysis_to_excel(summary_df, gdp_chart_path, inflation_chart_path, filename="Economic_Report.xlsx"):

   #Create a Pandas Excel writer using the XlsxWriter engine.
    with pd.ExcelWriter(filename, engine='xlsxwriter') as writer:
        # Write the summary DataFrame to a sheet named 'Summary Report'.
        summary_df.to_excel(writer, sheet_name='Summary Report', index=False, startrow=1)

        # Access the XlsxWriter workbook and worksheet objects
        workbook = writer.book
        worksheet = writer.sheets['Summary Report']



        # Adjust the column width for better readability.
        worksheet.set_column('A:C', 25)

        # For embedding charts
        # Insert the GDP growth chart to the right of the table
        worksheet.insert_image('E2', gdp_chart_path)

        # Insert the inflation chart below the first chart
        worksheet.insert_image('E28', inflation_chart_path)

    print(f"âœ… Report successfully exported to {filename}")

df = pd.read_excel(r'/content/WEO_Data.xlsx') #converting excel into pandas dataframe

df = df.drop(columns =['Estimates Start After','Country/Series-specific Notes','Scale']) #dropping extra column which came in directly with the download

df = df.drop([10,11]) #dropping extra row which came in directly with the download

years = [str(year) for year in range(2015, 2025)] #This list will be used for selecting and melting yearly data.

df.columns = df.columns.astype(str)

#Summary table of average GDP growth and inflation per country

# Filter for GDP growth data
gdp_summary_df = df[df['Subject Descriptor'] == 'Gross domestic product, constant prices'].copy()
# Calculating the average GDP growth for each country over the years
gdp_summary_df['Average GDP Growth (%)'] = gdp_summary_df[years].mean(axis=1)

# Filter for inflation data
inflation_summary_df = df[df['Subject Descriptor'] == 'Inflation, average consumer prices'].copy()
# Calculating the average inflation for each country over the years
inflation_summary_df['Average Inflation Rate (%)'] = inflation_summary_df[years].mean(axis=1)

# Merge the average GDP growth and inflation rates into a single summary table
# Selecting only 'Country' and the newly calculated average columns
summary_table = pd.merge(
    gdp_summary_df[['Country', 'Average GDP Growth (%)']],
    inflation_summary_df[['Country', 'Average Inflation Rate (%)']],
    on='Country'
)

print("Summary Table: Average GDP Growth and Inflation per Country (2015-2024)")
print(summary_table.to_string(index=False)) # had to use to_string() to display all rows/columns without truncation

# Line chart of GDP growth over time by country

# Filter for GDP growth data (re-filtering to ensure clarity, although gdp_summary_df could be used)
gdp_chart_df = df[df['Subject Descriptor'] == 'Gross domestic product, constant prices'].copy()

# Melting the DataFrame to long format for plotting
gdp_melted = gdp_chart_df.melt(id_vars=['Country'], value_vars=years, var_name='Year', value_name='GDP Growth (%)')

# Converting 'Year' to numeric for proper plotting order
gdp_melted['Year'] = pd.to_numeric(gdp_melted['Year'])

plt.figure(figsize=(12, 7))
sns.lineplot(data=gdp_melted, x='Year', y='GDP Growth (%)', hue='Country', marker='o')
plt.title('GDP Growth Over Time by Country (2015-2024)')
plt.xlabel('Year')
plt.ylabel('GDP Growth (%)')
plt.grid(True, linestyle='--', alpha=0.7)
plt.legend(title='Country', bbox_to_anchor=(1.05, 1), loc='upper left') #Legend for understanding the chart
plt.tight_layout()
plt.show()


# Saving the chart as an image before displaying
gdp_chart_filename = "gdp_growth_chart.png"
plt.savefig(gdp_chart_filename)
plt.show() # Display the plot
plt.close() # Close the plot figure to free memory

# Bar chart comparing inflation rates in 2024

# Filter for inflation data and select 2024
inflation_2024_df = df[df['Subject Descriptor'] == 'Inflation, average consumer prices'].copy()
inflation_2024_df = inflation_2024_df[['Country', '2024']]

# Rename the 2024 column for clarity
inflation_2024_df = inflation_2024_df.rename(columns={'2024': 'Inflation Rate (%) in 2024'})

plt.figure(figsize=(10, 6))
sns.barplot(data=inflation_2024_df, x='Country', y='Inflation Rate (%) in 2024', palette='viridis')
plt.title('Inflation Rates in 2024 by Country')
plt.xlabel('Country')
plt.ylabel('Inflation Rate (%)')
plt.grid(axis='y', linestyle='--', alpha=0.7)
plt.tight_layout()
plt.show()

# Save the chart as an image before displaying
inflation_chart_filename = "inflation_2024_chart.png"
plt.savefig(inflation_chart_filename)
plt.show() # Display the plot
plt.close() # Close the plot figure to free memory



export_analysis_to_excel(summary_table, gdp_chart_filename, inflation_chart_filename)